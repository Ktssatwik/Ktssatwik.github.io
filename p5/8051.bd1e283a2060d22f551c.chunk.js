"use strict";(self.webpackChunkdandelion_pro=self.webpackChunkdandelion_pro||[]).push([[8051],{338051:(o,e,i)=>{i.r(e),i.d(e,{default:()=>b});i(989526);var n,t=i(798463),l=i(66892),s=i.n(l),a=i(803199),d=i.n(a),r=i(961920),c=i(758878);function m(o,e,i,t){n||(n="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var l=o&&o.defaultProps,s=arguments.length-3;if(e||0===s||(e={children:void 0}),1===s)e.children=t;else if(s>1){for(var a=new Array(s),d=0;d<s;d++)a[d]=arguments[d+3];e.children=a}if(e&&l)for(var r in l)void 0===e[r]&&(e[r]=l[r]);else e||(e=l||{});return{$$typeof:n,type:o,key:void 0===i?null:""+i,ref:null,props:e,_owner:null}}var p=m(c.Pv,{}),v=m(c.Sh,{}),g=m(c.aR,{}),u=m(c._l,{}),f=m(c.hU,{}),h=m(c.D_,{}),y=m(c.vP,{}),w=m(c.ru,{});const b=function(){const o=s().name+" - UI Elements",e=s().desc,i="containers/UiElements/demos/DialogModal/";return m("div",{},void 0,m(t.ql,{},void 0,m("title",{},void 0,o),m("meta",{name:"description",content:e}),m("meta",{property:"og:title",content:o}),m("meta",{property:"og:description",content:e}),m("meta",{property:"twitter:title",content:o}),m("meta",{property:"twitter:description",content:e})),m(r.gk,{title:"Modals",icon:"ion-ios-browsers-outline",desc:"The modal component provides a solid foundation for creating dialogs, popovers, lightboxes, or whatever else."},void 0,m("div",{},void 0,p,m(r.c6,{componentName:i+"ModalDemo.js"}))),m(r.gk,{title:"Image Popup",icon:"ion-ios-images-outline",desc:"A flexible lightbox component for displaying images. It's also can handle zoom and panning of images. Mobile friendly, with pinch to zoom and swipe"},void 0,m("div",{},void 0,v,m(r.c6,{componentName:i+"ImagePopup.js"}))),m(r.gk,{title:"Alerts",icon:"ion-ios-warning-outline",desc:"Alerts are urgent interruptions, requiring acknowledgement, that inform the user about a situation."},void 0,m("div",{},void 0,g,m(r.c6,{componentName:i+"AlertDialog.js"}))),m(d(),{container:!0,spacing:2},void 0,m(d(),{item:!0,md:6},void 0,m(r.gk,{title:"Selection Dialog",icon:"ion-ios-list-box-outline",desc:"Choosing an option immediately commits the option and closes the menu"},void 0,m("div",{},void 0,u,m(r.c6,{componentName:i+"SelectDialog.js"})))),m(d(),{item:!0,md:6},void 0,m(r.gk,{title:"Selection Radio Dialog",icon:"ion-ios-list-box-outline",desc:"In this example, users can listen to multiple ringtones but only make a final selection upon touching \u201cOK.\u201d"},void 0,m("div",{},void 0,f,m(r.c6,{componentName:i+"SelectRadioDialog.js"}))))),m(r.gk,{title:"Form dialogs",icon:"ion-ios-create-outline",desc:"Form dialogs allow users to fill out form fields within a dialog."},void 0,m("div",{},void 0,h,m(r.c6,{componentName:i+"FormDialog.js"}))),m(d(),{container:!0,spacing:2},void 0,m(d(),{item:!0,md:6,xs:12},void 0,m(r.gk,{title:"Full Screen (Responsive)",icon:"ion-ios-easel-outline",desc:"You may make a Dialog responsively full screen. By default, Dialog responsively full screens at or below the sm screen size."},void 0,m("div",{},void 0,y,m(r.c6,{componentName:i+"FullScreenDialog.js"})))),m(d(),{item:!0,md:6,xs:12},void 0,m(r.gk,{title:"Scrolling dialog",icon:"ion-ios-download-outline",desc:"When dialogs become too long for the user\u2019s viewport or device, they scroll."},void 0,m("div",{},void 0,w,m(r.c6,{componentName:i+"ScrollDialog.js"}))))))}}}]);